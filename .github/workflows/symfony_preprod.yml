# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Symfony preprod

on:
  push:
    branches: [ "preprod" ]
  pull_request:
    branches: [ "preprod" ]

permissions:
  contents: read

jobs:
  symfony-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: shivammathur/setup-php@v2
      with:
        php-version: '8'
    - name: Cache vendor folder
      uses: actions/cache@v3
      with:
        path: /vendor
        key: ${{ github.sha }}

    # - name: Composer update
    #   run: composer update    
    - name: Validate composer.json and composer.lock
      run: composer validate
    - name: Install dependencies
      run: composer install
      # uses: php-actions/composer@v6
      # with:
      #   php_version: '8.0'
    - name: Check Symfony requirements
      run: vendor/bin/requirements-checker
    - name: Disable Symfony debug toolbar
      run: composer remove --dev symfony/debug
        # echo "debug:\n  enabled: false" >> config/packages/dev/debug.yaml
    - name: Clear cache Composer
      run: composer clear-cache
#     - name: Create Database
#       run: |
#         mkdir -p data
#         touch data/database.sqlite
#     - name: Execute tests (Unit and Feature tests) via PHPUnit
#       env:
#         DATABASE_URL: sqlite:///%kernel.project_dir%/data/database.sqlite
#       run: vendor/bin/phpunit
