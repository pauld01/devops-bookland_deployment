# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Symfony PROD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  symfony-tests:
      runs-on: ubuntu-latest
      steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8'
  
      - name: Install Symfony CLI
        run: |
          wget https://get.symfony.com/cli/installer -O - | bash
          export PATH="$HOME/.symfony/bin:$PATH"
  
      - name: Check Symfony requirements
        run: composer require --dev symfony/requirements-checker && vendor/bin/requirements-checker

  unitary-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve cached vendor folder
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
        
      - name: Build vendor folder
        run: composer install
        working-directory: ${{ github.workspace }}

      - name: PHPUnit tests
        run: vendor/bin/phpunit
       

  database:
    runs-on: ubuntu-latest
    
    steps:
      - name: Copy .env.test.local
        run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"

      - name: MySQL connection test
        run: mysql -u ${{ vars.DATABASE_USER }} -p${{ vars.DATABASE_PASSWORD }} -h ${{ vars.DATABASE_HOST }} -P ${{ vars.DATABASE_PORT }} ${{ vars.DATABASE_NAME }} -e "SELECT 1 + 1"

      - name: Update .env file
        run: |
          sed -i 's/^DATABASE_URL=.*/DATABASE_URL=${{ vars.DATABASE_URL }}/' .env
          sed -i 's/^APP_ENV=.*/APP_ENV=prod/' .env
        working-directory: ${{ github.workspace }}
